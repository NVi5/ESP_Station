# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: DockerInstaller@0
  inputs:
    dockerVersion: '20.10.5'

- script: docker run -v $PWD:/project -w /project espressif/idf idf.py build
  displayName: 'Build project using espressif/idf image'

# - task: CopyFiles@2
#   inputs:
#     SourceFolder: 'build'
#     Contents: 'esp32.bin'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Copy-Item -Path "build/esp32.bin" -Destination "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).bin"'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: FtpUpload@2
  inputs:
    credentialsOption: 'inputs'
    serverUrl: 'ftp://ftpupload.net'
    username: 'epiz_28190517'
    password: 'azefrVtR2Syx'
    rootDirectory: '$(Build.ArtifactStagingDirectory)'
    filePatterns: '**'
    remoteDirectory: '/htdocs/uploads/$(Build.BuildId)/'
    clean: false
    cleanContents: false
    preservePaths: false
    trustSSL: false'